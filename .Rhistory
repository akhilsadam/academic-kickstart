cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelkCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3), data = dat2,method = "lm",trControl = trainMethod)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
print(model)
loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
print(model)
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
#cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
print(model)
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
print(model)
loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(Height~poly(Parent,3),form=y~poly(x,3), data = data2,method = "lm",trControl = trainMethod)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(form=Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
print(model)
loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(formula=Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(form=Height~poly(Parent,3), data = data2,method = "lm",trControl = trainMethod)
print(model)
loocvERR = sqrt(cv.lm(data2,modelLCV)$delta)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
print(model)
loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
print(model)
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
#modelkCV = glm(Height~poly(Parent,3),data=data2)
trainMethod <- trainControl(method = "cv",number=5)
modelLCV = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
#loocvERR = sqrt(cv.glm(data2,modelLCV,K=5)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelkCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCV = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
#print(model)
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCVT = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
loocvERR = modelLCVT$results
#Alternate
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
trainMethod <- trainControl(method = "LOOCV")
modelLCVT = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
loocvERR = modelLCVT$results
loocvERR
#Alternate
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCVT = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
loocvERR = modelLCVT$results[,2]
loocvERR
#Alternate
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
#cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "cv",number=5)
modelkCVT = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
kcvERR = modelkCVT$results[,2]
#Alternate
#modelkCV = glm(Height~poly(Parent,3),data=data2)
#loocvERR = sqrt(cv.glm(data2,modelLCV,K=5)$delta)
cat("Seed",seed,"5-fold CV error with polynomial fit of degree 3 (raw, adjusted):",c(kcvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelkCV,data2), (data2$Height)),'\n\n')
trainMethod <- trainControl(method = "LOOCV")
modelLCVT = train(form=Height~poly(Parent,3), data = data2,method = "glm",trControl = trainMethod)
loocvERR = modelLCVT$results[,2]
#Alternate
#loocvERR = sqrt(cv.glm(data2,modelLCV)$delta)
cat("Seed",seed,"LOOCV error with polynomial fit of degree 3 (raw, adjusted):",c(loocvERR),"\n")
cat('RMSE on complete dataset:',RMSE(predict(modelLCV,data2), (data2$Height)),'\n\n')
X0 = 0.5*(data2$Mother + data2$Father)
Y0 = data2$Height
cat('Child Height (Y) vs Parent Height (X)\n')
model0=lm(Y~X0)
X0 = 0.5*(data2$Mother + data2$Father)
Y0 = data2$Height
cat('Child Height (Y) vs Parent Height (X)\n')
model0=lm(Y0~X0)
plot(X0,Y0)
abline(model0)
out=summary(model0)
out
cat('With 95% confidence, for an inch increase in average parent height, the child height increases about',out$coefficients[2,1],'+-',2*out$coefficients[2,2],'on average.\n')
RMSE=sqrt(sum(residuals(model0)^2) / df.residual(model0))
build_site()
blogdown::build_site()
load("C:/Users/sadam/Desktop/Webpage/Website/academic-kickstart/.RData")
clear
clear all
clean
remotes::install_github('rstudio/pagedown')
remotes::install_github('rstudio/pagedown')
clear
clean
clc
cla
remotes::install_github('rcpp')
install.packages(rcpp)
install.packages(Rcpp)
install.packages(Rcpp)
update.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages(knitr)
install.packages("knitr")
install.packages('animation')
knitr::opts_chunk$set(echo = FALSE,
fig.align = 'center')
require(magick)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(imgdir)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(imgdir)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
imgdir
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(imgdir)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(imgdir)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(imgdir)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print("IMG Directory:",imgdir)
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(paste("IMG Directory:",imgdir))
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print(paste("IMG Directory:",imgdir))
imgdir_path<-Sys.getenv("img")
imgdir<-imgdir_path[1]
print("Getting Variables")
print(paste("IMG Directory:",imgdir))
knitr::opts_chunk$set(echo = FALSE,
fig.align = 'center',
fig.width=8,
fig.height=6)
#require(magick)
library("jpeg")
print(paste("IMG Directory:",imgdir))
for (i in 0:59)
{
#  imshow(paste("greed_vs_opt2_",i,".jpg",sep=""))
![](paste(imgdir,"/",imgname,".jpg",sep="")){ width=50% }
knitr::opts_chunk$set(echo = FALSE,
fig.align = 'center')
#require(magick)
library("jpeg")
require("R.utils")
library("animation")
imgdir_path<-Sys.getenv("rstudio_img")
imgdir<-imgdir_path[1]
if(imgdir="")
imgdir_path<-Sys.getenv("rstudio_img")
imgdir<-imgdir_path[1]
if(imgdir="")
imgdir_path<-Sys.getenv("rstudio_img")
imgdir<-imgdir_path[1]
if(imgdir=="")
{
imgdir="../../tsp-build/img"
}
print(paste("IMG Directory:",imgdir))
outdir_path<-Sys.getenv("rstudio_out_img")
outdir<-outdir_path[1]
if(outdir=="")
{
outdir="../../output/img"
}
print(paste("OUT Directory:",outdir))
imshow <- function(imgname)
{
jj <- readJPEG(paste(imgdir,"/",imgname,sep=""),native=TRUE)
par(mar=c(0,0,0,0),xaxs = 'i',yaxs='i')
plot(0:1,0:1,type="n",ann=FALSE,axes=FALSE)
rasterImage(jj,0,0,1,1)
}
imshow("greed_vs_opt2_M_LT_prime.jpg")
imshow("greed_vs_opt2_M_LT_prime.jpg")
imshow("greed_vs_opt2_M_L_prime.jpg")
imshow("greed_vs_opt2_M_T_prime.jpg")
imshow("greedy-test.jpg")
imshow("2-opt-test_2.jpg")
imshow("2-opt-test.jpg")
imshow("greed_vs_opt2_hist.jpg")
imshow("greed_vs_opt2_histT.jpg")
imshow("greed_vs_opt2_LT.jpg")
imshow("greed_vs_opt2_M_LT.JPG")
knitr::opts_chunk$set(echo = FALSE,
fig.align = 'center')
#require(magick)
library("jpeg")
require("R.utils")
library("animation")
imgdir_path<-Sys.getenv("rstudio_img")
imgdir<-imgdir_path[1]
if(imgdir=="")
{
imgdir="../../tsp-build/img"
}
print(paste("IMG Directory:",imgdir))
outdir_path<-Sys.getenv("rstudio_out_img")
outdir<-outdir_path[1]
if(outdir=="")
{
outdir="../../output/img"
}
print(paste("OUT Directory:",outdir))
imshow <- function(imgname)
{
jj <- readJPEG(paste(imgdir,"/",imgname,sep=""),native=TRUE)
par(mar=c(0,0,0,0),xaxs = 'i',yaxs='i')
plot(0:1,0:1,type="n",ann=FALSE,axes=FALSE)
rasterImage(jj,0,0,1,1)
}
#print(paste("IMG Directory:",imgdir))
#for (i in 0:59)
#{
#  imshow(paste("greed_vs_opt2_",i,".jpg",sep=""))
#}
saveGIF(
{
for (i in 0:59)
{
imshow(paste("greed_vs_opt2_",i,".jpg",sep=""))
}
},
movie.name = "greed_vs_opt2.gif",
interval = 0.1,
ani.width = 560,
ani.height = 420,
)
imshow("greed_vs_opt2_M_LT_prime.jpg")
imshow("greed_vs_opt2_M_L_prime.jpg")
imshow("greed_vs_opt2_M_T_prime.jpg")
cat(paste0(
"repeat until no improvement is made {",
"\t\tbest_distance = calculateTotalDistance(existing_route)",
"\t\tstart_again:",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)",
"\t\t\tnew_distance = calculateTotalDistance(new_route)",
"\t\t\tif (new_distance < best_distance) {",
"\t\t\t\texisting_route = new_route",
"\t\t\t\tbest_distance = new_distance",
"\t\t\t\tgoto start_again",
"\t\t\t}",
"\t\t}",
"\t}",
"}",), sep = "\n")
cat(paste0(
"repeat until no improvement is made {",
"\t\tbest_distance = calculateTotalDistance(existing_route)",
"\t\tstart_again:",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)",
"\t\t\tnew_distance = calculateTotalDistance(new_route)",
"\t\t\tif (new_distance < best_distance) {",
"\t\t\t\texisting_route = new_route",
"\t\t\t\tbest_distance = new_distance",
"\t\t\t\tgoto start_again",
"\t\t\t}",
"\t\t}",
"\t}",
"}"), sep = "\n")
cat(paste0(
"repeat until no improvement is made {",
"\t\tbest_distance = calculateTotalDistance(existing_route)",
"\t\tstart_again:",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)",
"\t\t\tnew_distance = calculateTotalDistance(new_route)",
"\t\t\tif (new_distance < best_distance) {",
"\t\t\t\texisting_route = new_route",
"\t\t\t\tbest_distance = new_distance",
"\t\t\t\tgoto start_again",
"\t\t\t}",
"\t\t}",
"\t}",
"}"), sep = "\r\n")
cat(paste0(
"repeat until no improvement is made {",
"\t\tbest_distance = calculateTotalDistance(existing_route)",
"\t\tstart_again:",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)",
"\t\t\tnew_distance = calculateTotalDistance(new_route)",
"\t\t\tif (new_distance < best_distance) {",
"\t\t\t\texisting_route = new_route",
"\t\t\t\tbest_distance = new_distance",
"\t\t\t\tgoto start_again",
"\t\t\t}",
"\t\t}",
"\t}",
"}"), sep = "\n\n")
cat(paste0(
"repeat until no improvement is made {\n",
"\t\tbest_distance = calculateTotalDistance(existing_route)",
"\t\tstart_again:",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)",
"\t\t\tnew_distance = calculateTotalDistance(new_route)",
"\t\t\tif (new_distance < best_distance) {",
"\t\t\t\texisting_route = new_route",
"\t\t\t\tbest_distance = new_distance",
"\t\t\t\tgoto start_again",
"\t\t\t}",
"\t\t}",
"\t}",
"}"), sep = "\n\n")
cat(paste0(
"repeat until no improvement is made {\n",
"\t\tbest_distance = calculateTotalDistance(existing_route)\n",
"\t\tstart_again:\n",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {\n",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {\n",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)\n",
"\t\t\tnew_distance = calculateTotalDistance(new_route)\n",
"\t\t\tif (new_distance < best_distance) {\n",
"\t\t\t\texisting_route = new_route\n",
"\t\t\t\tbest_distance = new_distance\n",
"\t\t\t\tgoto start_again\n",
"\t\t\t}\n",
"\t\t}\n",
"\t}\n",
"}\n"), sep = "\n\n")
update.packages()
warnings()
update.packages(...dependencies = TRUE)
update.packages('pagedown')
update.packages('pagedown')
update.packages('caret')
update.packages('pandoc')
knitr::opts_chunk$set(echo = FALSE,
fig.align = 'center')
#require(magick)
library("jpeg")
require("R.utils")
library("animation")
imgdir_path<-Sys.getenv("rstudio_img")
imgdir<-imgdir_path[1]
if(imgdir=="")
{
imgdir="../../tsp-build/img"
}
print(paste("IMG Directory:",imgdir))
outdir_path<-Sys.getenv("rstudio_out_img")
outdir<-outdir_path[1]
if(outdir=="")
{
outdir="../../output/img"
}
print(paste("OUT Directory:",outdir))
imshow <- function(imgname)
{
jj <- readJPEG(paste(imgdir,"/",imgname,sep=""),native=TRUE)
par(mar=c(0,0,0,0),xaxs = 'i',yaxs='i')
plot(0:1,0:1,type="n",ann=FALSE,axes=FALSE)
rasterImage(jj,0,0,1,1)
}
#print(paste("IMG Directory:",imgdir))
#for (i in 0:59)
#{
#  imshow(paste("greed_vs_opt2_",i,".jpg",sep=""))
#}
cat(paste0(
"repeat until no improvement is made {\n",
"\t\tbest_distance = calculateTotalDistance(existing_route)\n",
"\t\tstart_again:\n",
"\t\tfor (i = 0; i <= number of nodes eligible to be swapped - 1; i++) {\n",
"\t\tfor (k = i + 1; k <= number of nodes eligible to be swapped; k++) {\n",
"\t\t\tnew_route = 2optSwap(existing_route, i, k)\n",
"\t\t\tnew_distance = calculateTotalDistance(new_route)\n",
"\t\t\tif (new_distance < best_distance) {\n",
"\t\t\t\texisting_route = new_route\n",
"\t\t\t\tbest_distance = new_distance\n",
"\t\t\t\tgoto start_again\n",
"\t\t\t}\n",
"\t\t}\n",
"\t}\n",
"}\n"), sep = "\n\n")
#knitr::write_bib(c('knitr', 'rmarkdown', 'jpeg', 'R.utils', 'animation'), 'packages.bib')
install.packages('pandoc',2.16)
install.packages('pandoc',version = "2.16")
install.packages('pandoc',version = "2.16.2")
install_version('pandoc',version = "2.16.2")
install.packages('devtools')
install_version('pandoc',version = "2.16.2")
require(devtools)install_version('pandoc',version = "2.16.2")
require(devtools);install_version('pandoc',version = "2.16.2")
install_version('pandoc',version = "2.16.2")
install_version('pandoc',version = "2.16.2", repos = "http://cran.us.r-project.org")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
require(devtools);install_version('pandoc',version = "2.16.2")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
install_version('pagedown',version = "0.16", repos = "http://cran.us.r-project.org")
install.packages()
update.packages()
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages(c("colorspace", "conquer", "dplyr", "fansi", "glue", "gower", "magrittr", "rlang", "seriation", "systemfonts", "tibble", "utf8"))
install.packages(c("colorspace", "conquer", "dplyr", "fansi", "glue", "gower", "magrittr", "rlang", "seriation", "systemfonts", "tibble", "utf8"))
lsd
update.packages()
''
update.packages()
install.packages('abind', 'adabag', 'ade4', 'animation', 'AsioHeaders', 'askpass', 'assertthat', 'backports', 'base64enc', 'BH', 'biotools', 'bit', 'bit64', 'bitops', 'blob', 'blogdown', 'bookdown', 'boot', 'brew', 'brio', 'broom', 'bslib', 'cachem', 'callr', 'car', 'carData', 'caret', 'caTools', 'cellranger', 'class', 'cli', 'clipr', 'cluster', 'codetools', 'colorspace', 'commonmark', 'conquer', 'corrgram', 'corrplot', 'cowplot', 'cpp11', 'crayon', 'credentials', 'crosstalk', 'curl', 'data.table', 'DBI', 'dbplyr', 'dendextend', 'desc', 'devtools', 'diffobj', 'digest', 'doParallel', 'dplyr', 'dtplyr', 'e1071', 'ellipsis', 'evaluate', 'extrafont', 'extrafontdb', 'fansi', 'faraway', 'farver', 'fastAdaboost', 'fastmap', 'fontawesome', 'forcats', 'foreach', 'foreign', 'formatR', 'formattable', 'fs', 'future', 'future.apply', 'gargle', 'gbm', 'gclus', 'generics', 'gert', 'ggplot2', 'ggpubr', 'ggrepel', 'ggsci', 'ggsignif', 'ggvis', 'gh', 'gitcreds', 'glmnet', 'globals', 'glue', 'goftest', 'googledrive', 'googlesheets4', 'gower', 'gplots', 'gridExtra', 'gtable', 'gtools', 'haven', 'highr', 'hms', 'htmltools', 'htmlwidgets', 'httpuv', 'httr', 'ids', 'ini', 'ipred', 'ISLR', 'isoband', 'iterators', 'jpeg', 'jquerylib', 'jsonlite', 'KernSmooth', 'knitr', 'labeling', 'later', 'lattice', 'lava', 'lazyeval', 'leaps', 'lifecycle', 'listenv', 'lme4', 'lubridate', 'magick', 'magrittr', 'manipulateWidget', 'maptools', 'markdown', 'MASS', 'matlib', 'Matrix', 'MatrixModels', 'matrixStats', 'memoise', 'Metrics', 'mgcv', 'mime', 'miniUI', 'minqa', 'ModelMetrics', 'modelr', 'munsell', 'nlme', 'nloptr', 'nnet', 'nortest', 'numDeriv', 'olsrr', 'openssl', 'openxlsx', 'pagedown', 'parallelly', 'pbkrtest', 'pillar', 'pinp', 'pixmap', 'pkgbuild', 'pkgconfig', 'pkgload', 'plyr', 'polynom', 'pracma', 'praise', 'prettyunits', 'printr', 'pROC', 'processx', 'prodlim', 'progress', 'progressr', 'promises', 'proxy', 'ps', 'purrr', 'qap', 'quantreg', 'R.methodsS3', 'R.oo', 'R.utils', 'R6', 'randomForest', 'rappdirs', 'rcmdcheck', 'RColorBrewer', 'Rcpp', 'RcppArmadillo', 'RcppEigen', 'readr', 'readxl', 'recipes', 'registry', 'rematch', 'rematch2', 'remotes', 'reprex', 'reshape2', 'rgl', 'rio', 'rlang', 'rmarkdown', 'roxygen2', 'rpart', 'rprojroot', 'rstatix', 'rstudioapi', 'Rttf2pt1', 'rversions', 'rvest', 'sass', 'scales', 'selectr', 'seriation', 'servr', 'sessioninfo', 'shape', 'shiny', 'shinyjs', 'sourcetools', 'sp', 'SparseM', 'spatial', 'SQUAREM', 'statar', 'statmod', 'stringi', 'stringr', 'survival', 'svglite', 'sys', 'systemfonts', 'testthat', 'tibble', 'tidyr', 'tidyselect', 'tidyverse', 'timeDate', 'tinytex', 'tree', 'TSP', 'tzdb', 'usethis', 'utf8', 'uuid', 'vctrs', 'viridis', 'viridisLite', 'vroom', 'waldo', 'webshot', 'websocket', 'whisker', 'withr', 'xfun', 'xml2', 'xopen', 'xtable', 'yaml', 'zip')
install.packages('abind', 'adabag', 'ade4', 'animation', 'AsioHeaders', 'askpass', 'assertthat', 'backports', 'base64enc', 'BH', 'biotools', 'bit', 'bit64', 'bitops', 'blob', 'blogdown', 'bookdown', 'boot', 'brew', 'brio', 'broom', 'bslib', 'cachem', 'callr', 'car', 'carData', 'caret', 'caTools', 'cellranger', 'class', 'cli', 'clipr', 'cluster', 'codetools', 'colorspace', 'commonmark', 'conquer', 'corrgram', 'corrplot', 'cowplot', 'cpp11', 'crayon', 'credentials', 'crosstalk', 'curl', 'data.table', 'DBI', 'dbplyr', 'dendextend', 'desc', 'devtools', 'diffobj', 'digest', 'doParallel', 'dplyr', 'dtplyr', 'e1071', 'ellipsis', 'evaluate', 'extrafont', 'extrafontdb', 'fansi', 'faraway', 'farver', 'fastAdaboost', 'fastmap', 'fontawesome', 'forcats', 'foreach', 'foreign', 'formatR', 'formattable', 'fs', 'future', 'future.apply', 'gargle', 'gbm', 'gclus', 'generics', 'gert', 'ggplot2', 'ggpubr', 'ggrepel', 'ggsci', 'ggsignif', 'ggvis', 'gh', 'gitcreds', 'glmnet', 'globals', 'glue', 'goftest', 'googledrive', 'googlesheets4', 'gower', 'gplots', 'gridExtra', 'gtable', 'gtools', 'haven', 'highr', 'hms', 'htmltools', 'htmlwidgets', 'httpuv', 'httr', 'ids', 'ini', 'ipred', 'ISLR', 'isoband', 'iterators', 'jpeg', 'jquerylib', 'jsonlite', 'KernSmooth', 'knitr', 'labeling', 'later', 'lattice', 'lava', 'lazyeval', 'leaps', 'lifecycle', 'listenv', 'lme4', 'lubridate', 'magick', 'magrittr', 'manipulateWidget', 'maptools', 'markdown', 'MASS', 'matlib', 'Matrix', 'MatrixModels', 'matrixStats', 'memoise', 'Metrics', 'mgcv', 'mime', 'miniUI', 'minqa', 'ModelMetrics', 'modelr', 'munsell', 'nlme', 'nloptr', 'nnet', 'nortest', 'numDeriv', 'olsrr', 'openssl', 'openxlsx', 'pagedown', 'parallelly', 'pbkrtest', 'pillar', 'pinp', 'pixmap', 'pkgbuild', 'pkgconfig', 'pkgload', 'plyr', 'polynom', 'pracma', 'praise', 'prettyunits', 'printr', 'pROC', 'processx', 'prodlim', 'progress', 'progressr', 'promises', 'proxy', 'ps', 'purrr', 'qap', 'quantreg', 'R.methodsS3', 'R.oo', 'R.utils', 'R6', 'randomForest', 'rappdirs', 'rcmdcheck', 'RColorBrewer', 'Rcpp', 'RcppArmadillo', 'RcppEigen', 'readr', 'readxl', 'recipes', 'registry', 'rematch', 'rematch2', 'remotes', 'reprex', 'reshape2', 'rgl', 'rio', 'rlang', 'rmarkdown', 'roxygen2', 'rpart', 'rprojroot', 'rstatix', 'rstudioapi', 'Rttf2pt1', 'rversions', 'rvest', 'sass', 'scales', 'selectr', 'seriation', 'servr', 'sessioninfo', 'shape', 'shiny', 'shinyjs', 'sourcetools', 'sp', 'SparseM', 'spatial', 'SQUAREM', 'statar', 'statmod', 'stringi', 'stringr', 'survival', 'svglite', 'sys', 'systemfonts', 'testthat', 'tibble', 'tidyr', 'tidyselect', 'tidyverse', 'timeDate', 'tinytex', 'tree', 'TSP', 'tzdb', 'usethis', 'utf8', 'uuid', 'vctrs', 'viridis', 'viridisLite', 'vroom', 'waldo', 'webshot', 'websocket', 'whisker', 'withr', 'xfun', 'xml2', 'xopen', 'xtable', 'yaml', 'zip')
install.packages(['abind', 'adabag', 'ade4', 'animation', 'AsioHeaders', 'askpass', 'assertthat', 'backports', 'base64enc', 'BH', 'biotools', 'bit', 'bit64', 'bitops', 'blob', 'blogdown', 'bookdown', 'boot', 'brew', 'brio', 'broom', 'bslib', 'cachem', 'callr', 'car', 'carData', 'caret', 'caTools', 'cellranger', 'class', 'cli', 'clipr', 'cluster', 'codetools', 'colorspace', 'commonmark', 'conquer', 'corrgram', 'corrplot', 'cowplot', 'cpp11', 'crayon', 'credentials', 'crosstalk', 'curl', 'data.table', 'DBI', 'dbplyr', 'dendextend', 'desc', 'devtools', 'diffobj', 'digest', 'doParallel', 'dplyr', 'dtplyr', 'e1071', 'ellipsis', 'evaluate', 'extrafont', 'extrafontdb', 'fansi', 'faraway', 'farver', 'fastAdaboost', 'fastmap', 'fontawesome', 'forcats', 'foreach', 'foreign', 'formatR', 'formattable', 'fs', 'future', 'future.apply', 'gargle', 'gbm', 'gclus', 'generics', 'gert', 'ggplot2', 'ggpubr', 'ggrepel', 'ggsci', 'ggsignif', 'ggvis', 'gh', 'gitcreds', 'glmnet', 'globals', 'glue', 'goftest', 'googledrive', 'googlesheets4', 'gower', 'gplots', 'gridExtra', 'gtable', 'gtools', 'haven', 'highr', 'hms', 'htmltools', 'htmlwidgets', 'httpuv', 'httr', 'ids', 'ini', 'ipred', 'ISLR', 'isoband', 'iterators', 'jpeg', 'jquerylib', 'jsonlite', 'KernSmooth', 'knitr', 'labeling', 'later', 'lattice', 'lava', 'lazyeval', 'leaps', 'lifecycle', 'listenv', 'lme4', 'lubridate', 'magick', 'magrittr', 'manipulateWidget', 'maptools', 'markdown', 'MASS', 'matlib', 'Matrix', 'MatrixModels', 'matrixStats', 'memoise', 'Metrics', 'mgcv', 'mime', 'miniUI', 'minqa', 'ModelMetrics', 'modelr', 'munsell', 'nlme', 'nloptr', 'nnet', 'nortest', 'numDeriv', 'olsrr', 'openssl', 'openxlsx', 'pagedown', 'parallelly', 'pbkrtest', 'pillar', 'pinp', 'pixmap', 'pkgbuild', 'pkgconfig', 'pkgload', 'plyr', 'polynom', 'pracma', 'praise', 'prettyunits', 'printr', 'pROC', 'processx', 'prodlim', 'progress', 'progressr', 'promises', 'proxy', 'ps', 'purrr', 'qap', 'quantreg', 'R.methodsS3', 'R.oo', 'R.utils', 'R6', 'randomForest', 'rappdirs', 'rcmdcheck', 'RColorBrewer', 'Rcpp', 'RcppArmadillo', 'RcppEigen', 'readr', 'readxl', 'recipes', 'registry', 'rematch', 'rematch2', 'remotes', 'reprex', 'reshape2', 'rgl', 'rio', 'rlang', 'rmarkdown', 'roxygen2', 'rpart', 'rprojroot', 'rstatix', 'rstudioapi', 'Rttf2pt1', 'rversions', 'rvest', 'sass', 'scales', 'selectr', 'seriation', 'servr', 'sessioninfo', 'shape', 'shiny', 'shinyjs', 'sourcetools', 'sp', 'SparseM', 'spatial', 'SQUAREM', 'statar', 'statmod', 'stringi', 'stringr', 'survival', 'svglite', 'sys', 'systemfonts', 'testthat', 'tibble', 'tidyr', 'tidyselect', 'tidyverse', 'timeDate', 'tinytex', 'tree', 'TSP', 'tzdb', 'usethis', 'utf8', 'uuid', 'vctrs', 'viridis', 'viridisLite', 'vroom', 'waldo', 'webshot', 'websocket', 'whisker', 'withr', 'xfun', 'xml2', 'xopen', 'xtable', 'yaml', 'zip'])
install.packages(['abind', 'adabag', 'ade4', 'animation', 'AsioHeaders', 'askpass', 'assertthat', 'backports', 'base64enc', 'BH', 'biotools', 'bit', 'bit64', 'bitops', 'blob', 'blogdown', 'bookdown', 'boot', 'brew', 'brio', 'broom', 'bslib', 'cachem', 'callr', 'car', 'carData', 'caret', 'caTools', 'cellranger', 'class', 'cli', 'clipr', 'cluster', 'codetools', 'colorspace', 'commonmark', 'conquer', 'corrgram', 'corrplot', 'cowplot', 'cpp11', 'crayon', 'credentials', 'crosstalk', 'curl', 'data.table', 'DBI', 'dbplyr', 'dendextend', 'desc', 'devtools', 'diffobj', 'digest', 'doParallel', 'dplyr', 'dtplyr', 'e1071', 'ellipsis', 'evaluate', 'extrafont', 'extrafontdb', 'fansi', 'faraway', 'farver', 'fastAdaboost', 'fastmap', 'fontawesome', 'forcats', 'foreach', 'foreign', 'formatR', 'formattable', 'fs', 'future', 'future.apply', 'gargle', 'gbm', 'gclus', 'generics', 'gert', 'ggplot2', 'ggpubr', 'ggrepel', 'ggsci', 'ggsignif', 'ggvis', 'gh', 'gitcreds', 'glmnet', 'globals', 'glue', 'goftest', 'googledrive', 'googlesheets4', 'gower', 'gplots', 'gridExtra', 'gtable', 'gtools', 'haven', 'highr', 'hms', 'htmltools', 'htmlwidgets', 'httpuv', 'httr', 'ids', 'ini', 'ipred', 'ISLR', 'isoband', 'iterators', 'jpeg', 'jquerylib', 'jsonlite', 'KernSmooth', 'knitr', 'labeling', 'later', 'lattice', 'lava', 'lazyeval', 'leaps', 'lifecycle', 'listenv', 'lme4', 'lubridate', 'magick', 'magrittr', 'manipulateWidget', 'maptools', 'markdown', 'MASS', 'matlib', 'Matrix', 'MatrixModels', 'matrixStats', 'memoise', 'Metrics', 'mgcv', 'mime', 'miniUI', 'minqa', 'ModelMetrics', 'modelr', 'munsell', 'nlme', 'nloptr', 'nnet', 'nortest', 'numDeriv', 'olsrr', 'openssl', 'openxlsx', 'pagedown', 'parallelly', 'pbkrtest', 'pillar', 'pinp', 'pixmap', 'pkgbuild', 'pkgconfig', 'pkgload', 'plyr', 'polynom', 'pracma', 'praise', 'prettyunits', 'printr', 'pROC', 'processx', 'prodlim', 'progress', 'progressr', 'promises', 'proxy', 'ps', 'purrr', 'qap', 'quantreg', 'R.methodsS3', 'R.oo', 'R.utils', 'R6', 'randomForest', 'rappdirs', 'rcmdcheck', 'RColorBrewer', 'Rcpp', 'RcppArmadillo', 'RcppEigen', 'readr', 'readxl', 'recipes', 'registry', 'rematch', 'rematch2', 'remotes', 'reprex', 'reshape2', 'rgl', 'rio', 'rlang', 'rmarkdown', 'roxygen2', 'rpart', 'rprojroot', 'rstatix', 'rstudioapi', 'Rttf2pt1', 'rversions', 'rvest', 'sass', 'scales', 'selectr', 'seriation', 'servr', 'sessioninfo', 'shape', 'shiny', 'shinyjs', 'sourcetools', 'sp', 'SparseM', 'spatial', 'SQUAREM', 'statar', 'statmod', 'stringi', 'stringr', 'survival', 'svglite', 'sys', 'systemfonts', 'testthat', 'tibble', 'tidyr', 'tidyselect', 'tidyverse', 'timeDate', 'tinytex', 'tree', 'TSP', 'tzdb', 'usethis', 'utf8', 'uuid', 'vctrs', 'viridis', 'viridisLite', 'vroom', 'waldo', 'webshot', 'websocket', 'whisker', 'withr', 'xfun', 'xml2', 'xopen', 'xtable', 'yaml', 'zip'])
install.packages(caret)
install.packages('caret')
install.packages('pagedown')
install.packages('pandoc')
pandoc -v
npm install pandoc
pandoc
Sys.getenv("RSTUDIO_PANDOC")
Sys.getenv(RSTUDIO_PANDOC="C:\Program Files\Pandoc")
Sys.getenv(RSTUDIO_PANDOC=R"C:\Program Files\Pandoc")
Sys.getenv(RSTUDIO_PANDOC=r"C:\Program Files\Pandoc")
Sys.getenv(RSTUDIO_PANDOC="C:/Program Files/Pandoc")
install.pandoc()
require(installr)
install.packages(installr)
install.packages('installr)
csdfs
fi-e1
''
'_
install.packages('installr')
install.pandoc()
require(installr)
install.pandoc()
install.packages('jpeg')
install.packages('animation')
install.packages("rticles")
install.pandoc()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
install.pandoc()
update.packages('rticles')
install_github("rstudio/rticles")
library(devtools)
update.packages('rticles')
install_github("rstudio/rticles")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
![](HW2/1_1_ 1.png)
options(tinytex.verbose = TRUE)
